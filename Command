1. Docker
- run docker
   docker run <image>:<tag>
- building the container image
   docker build -t <image>
- listing locally stored docker images
   docker images
- running the container image
   docker run --name <container_name> -p 8080:8080 -d <image>
- Accessing app
   curl ocalhost:8080
- Listing all running containers 
   docker ps
- getting additional information about a container
   docker inspect <container_name>



2. Kubernetes
- List pod
   kubectl get pods
- Lisr Replocation Set
   kubectl rs
- List list Replication Controller
   kubectl get replicationcontrollers /  rc
- Melihat detail Pod/Probe
   kubectl describe pod
- Cek via browser
   kubectl port-forward [probe-name.yaml] 8080:80
- cek CPU consume node
   kubectl top node
- cek CPU consume pod
   kubectl top pod
- cek log
   kubectl logs webapp-2 -c simple-webapp
- Mangakses service dari dalam cluster 
   kubectl exec nama-pod -it -- /bin/sh //masuk ke KUbernetes
   curl http://cluster-ip:port/
- Melihat inspect dari service
   kubectl describe service nama-service
- Melihat list endpoint yg ditembak service
   kubectl get endpoints name-service
- Melihat Node Port
   kubectl service name-service
- Membuat service
   kubectl create -f nameService.yaml
- Melihat list Service
   kubectl get services
- Menghapus service
   kubectl delete service nameService
- Mengecek service ingress
   kubectl get pods --namespace kube-system
- Melihat service ingress yang sudah dicreate
   kubectl get ingresses
- Mendapatkan semua POD didalam semua namespace
   kubectl get pods --all-namespaces
- endapatkan semua POD didalam semua namespace, dengan informasi tambahan
   kubectl get pods -o wide
- Mendapatkan deployment tertentu
   kubectl get deployment my-dep
- Mendapatkan spesifikasi YAML dari POD tertentu
   kubectl get pod my-pod -o yaml 
- Deploy manifest file 
   kubectl apply -f [manifest].yaml
- Membuat/deploy resource dari beberapa file
   kubectl apply -f ./my1.yaml -f ./my2.yaml
- Membuat resource dari berbagai berkas manifest
   kubectl apply -f ./dir
- Membuat resource dari sebuah tautan
   kubectl apply -f https://git.io/vPieo
- Memulai sebuah instans tunggal nginx
   kubectl create deployment nginx --image=nginx
- Mendapatkan dokumentasi untuk manifest pod
   kubectl create deployment nginx --image=nginx
- Describe dengan lengkap (verbose)
   kubectl describe nodes my-node
   kubectl describe nodes my-node
- Mengurutkan service berdasarkan nama
   kubectl get services --sort-by=.metadata.name
- Mengurutkan service berdasarkan jumlah restart 
   kubectl get pods --sort-by='.status.containerStatuses[0].restartCount'
- PersistanceVolume diurutkan berdasarkan kapasitas
   kubectl get pv --sort-by=.spec.capacity.storage
- mendapatkan label versi dari semua Pod dengan label app=cassandra
   kubectl get pods --selector=app=cassandra -o \
  jsonpath='{.items[*].metadata.labels.version}'
- mendapatkan semua Node pekerja (worker) (selektor digunakan untuk tidak memasukkan
# Node yang memiliki label 'node-role.kubernetes.io/master' ke dalam keluaran)
   kubectl get node --selector='!node-role.kubernetes.io/master'
- Mendapatkan semua Pod yang sedang berjalan di dalam Namespace saat ini
   kubectl get pods --field-selector=status.phase=Running
- Describe config map
   kubectl describe cm db-config 
- Create config map with spec custom
   kubectl create cm [name_cm] --from-literal=[var]=[value]
- Create config secret 
   kubectl create secret generic [secret_name] --from-literal=[var]=[value] --from-literal=[var]=[value]
- Liat log dari pod name
   kubectl -n [name_space] logs [pod]
- exec atau mengakses kedalam pod
   kubectl -n elastic-stack exec -it [pod_name] -- [perintah, ex: sudo, apt install, cat /log/app.log]
- menambahkan label ke node
   kubectl label node nama_node key:value
- melihat environment variable
   kubectl exec nama-pod -- env
- mengakses service dengan DNS
   name-service.nama-namespace.svc.cluster.local
- melihat semua endpoint
   kubectl get endpoints
- melihat semua endpoint yg ditembak service tsb
   kubect get endpoint name-service
- membuat deployment
   kubectl apply -f dep-name.yaml
- melihat deployment
   kubectl get deployments
- rollback deployment
   kubectl rollout undo deployment name-deployment
- history deployment
   kubectl rollout history deployment name-deployment
- status deployment
   kubectl rollout history deployment name-deployment
- membuat persistent volume
   kubectl create -f persistentvolume.yaml
- melihat persistent volume
   kubectl get pv
- melihat deskripsi persistent volume
   kubectl describe pv namapv
- melihat persistent volume claim
   kubectl get pv
- melihat deskripsi persistent volume claim
   kubectl describe pvc namapvc
- menhapus pv/pvc
   kubectl delete pv/pvc pv/pvc-name
